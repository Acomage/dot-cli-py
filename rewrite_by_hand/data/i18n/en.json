{
  "health_git_not_installed": "Git is not installed. Please install git before using Dot.",
  "health_dotfiles_dir_missing": "Dotfiles directory does not exist. Run 'dot init' to create it.",
  "health_dotfiles_dir_not_directory": "~/.dotfiles exists but is not a directory.",
  "health_dotfiles_dir_not_git_repo": "~/.dotfiles exists but is not a git repository.",
  "health_dotfiles_dir_invalid_structure": "~/.dotfiles exists but has an invalid structure.",
  "health_run_init": "Run 'dot init' to initialize the repository.",
  "health_remote_not_configured": "Remote repository is not configured.",
  "health_run_remote": "Run 'dot remote <url>' to configure a remote repository.",
  "init_repo_exists": "Dotfiles repository already exists at ~/.dotfiles",
  "init_overwrite_prompt": "Do you want to overwrite the existing repository? (y/n)",
  "init_aborted": "Initialization aborted.",
  "init_clean_error": "Error cleaning existing repository: {error}",
  "init_dir_exists_not_repo": "~/.dotfiles exists but is not a git repository.",
  "init_path_exists_not_dir": "~/.dotfiles exists but is not a directory.",
  "init_cloning": "Cloning repository from {url}...",
  "init_clone_failed": "Failed to clone repository: {error}",
  "init_clone_success": "Repository cloned successfully.",
  "init_creating": "Creating new dotfiles repository...",
  "init_mkdir_error": "Failed to create directory {path}: {error}",
  "init_git_error": "Failed to initialize git repository: {error}",
  "init_commit_error": "Failed to commit initial files: {error}",
  "init_success": "Dotfiles repository initialized successfully.",
  "init_next_steps": "Next steps:\n1. Add files with 'dot add <path> <software>'\n2. Set up a remote repository with 'dot remote <url>'",
  "add_path_not_found": "Path not found: {path}",
  "add_copy_failed": "Failed to copy {path} to repository",
  "add_commit_failed": "Failed to commit changes: {error}",
  "add_success": "Added {path} for {software}",
  "add_failed": "Failed to add file: {error}",
  "remove_commit_failed": "Failed to commit changes: {error}",
  "remove_success": "Removed {path} for {software}",
  "remove_failed": "Failed to remove file: {error}",
  "edit_conflict_init_failed": "Failed to initialize conflict file for {path}",
  "edit_file_not_found": "File not found in repository: {path}",
  "edit_editor_failed": "Editor returned an error while editing {path}",
  "edit_merge_failed": "Failed to merge changes for {path}",
  "edit_commit_failed": "Failed to commit changes: {error}",
  "edit_success": "Edited {path}",
  "edit_failed": "Failed to edit file: {error}",
  "apply_all_not_implemented": "Applying all files is not implemented yet",
  "apply_failed": "Failed to apply {path}",
  "apply_success": "Applied {path}",
  "apply_no_path": "No path specified. Use --all to apply all changes or specify a path.",
  "sync_all_not_implemented": "Syncing all files is not implemented yet",
  "sync_file_not_found": "File not found: {path}",
  "sync_failed": "Failed to sync {path}",
  "sync_commit_failed": "Failed to commit changes: {error}",
  "sync_success": "Synced {path}",
  "sync_no_path": "No path specified. Use --all to sync all changes or specify a path.",
  "sync_create_directory": "Directory {path} does not exist. Create it?",
  "diff_file_not_found": "File not found: {path}",
  "diff_failed": "Failed to diff: {error}",
  "diff_no_changes": "No changes found for {path}",
  "diff_all_not_implemented": "Diffing all files is not implemented yet",
  "push_failed": "Failed to push: {error}",
  "push_success": "Changes pushed successfully",
  "pull_failed": "Failed to pull: {error}",
  "pull_success": "Changes pulled successfully",
  "update_success": "System updated successfully",
  "remote_remove_failed": "Failed to remove remote: {error}",
  "remote_remove_success": "Remote repository removed",
  "remote_set_failed": "Failed to set remote: {error}",
  "remote_set_success": "Remote repository set to {url}",
  "remote_no_url": "No URL specified",
  "manage_success": "Added {software} to local configuration",
  "manage_failed": "Failed to add software: {error}",
  "conflict_file_not_found": "File not found in repository: {path}",
  "conflict_not_marked": "File is not marked as conflict: {path}",
  "conflict_clean_failed": "Failed to clean conflict markers: {path}",
  "conflict_commit_failed": "Failed to commit changes: {error}",
  "conflict_clean_success": "Conflict markers removed from {path}",
  "conflict_already_marked": "File is already marked as conflict: {path}",
  "conflict_init_failed": "Failed to initialize conflict: {path}",
  "conflict_editor_failed": "Editor returned an error while editing {path}",
  "conflict_invalid_markers": "Invalid conflict markers in {path}",
  "conflict_mark_success": "Conflict markers added to {path}",
  "conflict_failed": "Failed to mark as conflict: {error}",
  "clean_no_repo": "Dotfiles repository does not exist",
  "clean_warning": "This will permanently delete your dotfiles repository",
  "clean_confirm": "Are you sure you want to continue?",
  "clean_aborted": "Clean aborted",
  "clean_success": "Dotfiles repository cleaned successfully",
  "clean_failed": "Failed to clean repository: {error}",
  "git_prompt_name": "Please enter your git user name",
  "git_prompt_email": "Please enter your git email"
}
